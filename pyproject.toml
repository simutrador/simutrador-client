[project]
name = "simutrador-client"
version = "0.2.0"
description = "Official SimuTrador Python client SDK to connect to the simulation engine via WebSocket"
readme = "README.md"
requires-python = ">=3.11"
dependencies = [
  "pydantic>=2.11.0",
  "pydantic-settings>=2.10.0",
  "httpx>=0.28.0",
  "websockets>=12.0",
  "simutrador-core",
]


[build-system]
requires = ["setuptools>=68.0", "wheel"]
build-backend = "setuptools.build_meta"

[tool.setuptools]
package-dir = {"" = "src"}
packages = ["simutrador_client"]

[tool.setuptools.package-data]
simutrador_client = ["py.typed"]

[dependency-groups]
dev = [
  "ruff>=0.11.0",
  "pyright>=1.1.376",
  "pytest>=8.2",
  "pytest-asyncio>=1.1.0",
]

[tool.ruff]
target-version = "py311"
line-length = 100
exclude = ["__pycache__", ".venv", "build", "dist"]

[tool.ruff.lint]
select = ["E", "F", "I", "N", "ARG", "UP"]

[tool.pytest.ini_options]
testpaths = ["tests"]
pythonpath = ["src"]
asyncio_mode = "strict"
addopts = ["-v", "--tb=short", "--strict-markers", "--strict-config"]
filterwarnings = ["error"]
markers = [
  "integration: marks tests as integration (may require server or external deps)",
]

[tool.pyright]
include = ["src", "tests"]
exclude = ["**/__pycache__", ".venv", "build", "dist"]
venvPath = "."
venv = ".venv"
typeCheckingMode = "basic"

executionEnvironments = [{ root = ".", extraPaths = ["./src"] }]


[[tool.uv.index]]
name = "testpypi"
url = "https://test.pypi.org/simple/"
publish-url = "https://test.pypi.org/legacy/"
explicit = true

[tool.uv.sources]
"simutrador-core" = { index = "testpypi" }

# [tool.uv.workspace]
# members = [
#     "example",
# ]
